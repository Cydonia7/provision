---
- hosts: all
  vars:
      user: cydo
  tasks:
      - name: Ensure user can use pacman (to bypass pacaur root protection)
        shell: "sh -c \"echo '{{user}} ALL=(ALL) NOPASSWD: /usr/bin/pacman' > /etc/sudoers.d/{{user}}-allow-to-sudo-pacman\""

      - name: Install packages
        pacman:
            name: vim,zsh,git,terminator,dnsmasq
            state: latest
            update_cache: yes

      - name: Change shell for all users using bash to zsh
        replace:
            path: /etc/passwd
            regexp: bash
            replace: zsh

      - name: Install Oh My Zsh
        shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
        become: true
        become_user: "{{user}}"
        changed_when: "not omz_result.stdout|search('You already have Oh My Zsh installed.')"
        register: omz_result

      - name: Check if dotfiles are already installed
        stat: "path=/home/{{user}}/.dotfiles"
        register: dotfiles

      - name: Download dotfiles
        become: true
        become_user: "{{user}}"
        git:
            repo: https://github.com/Cydonia7/.dotfiles.git
            dest: "/home/{{user}}/.dotfiles"
        when: not dotfiles.stat.exists

      - name: Install dotfiles
        become: true
        become_user: "{{user}}"
        shell: "/home/{{user}}/.dotfiles/setup"
        when: not dotfiles.stat.exists

      - name: Install Vim plugins
        become: true
        become_user: "{{user}}"
        shell: vim +PlugInstall +qall
        when: not dotfiles.stat.exists

      - name: "Add archlinux.fr repository to pacman"
        lineinfile:
            dest: "/etc/pacman.conf"
            state: "present"
            line: "{{item}}"
        with_items:
            - "[archlinuxfr]"
            - "SigLevel = Never"
            - "Server = http://repo.archlinux.fr/$arch"

      - name: "Install pacaur"
        pacman:
            name: pacaur
            state: latest
            update_cache: yes

      - name: "Install AUR packages (this can take a long time)"
        become: true
        become_user: "{{user}}"
        shell: "pacaur --needed --noconfirm -S font-manager docker docker-compose ttf-roboto arc-icon-theme arc-gtk-theme numlockx the_silver_searcher betterlockscreen"

      - name: Remove sudo rule for pacaur
        file:
            path: "/etc/sudoers.d/{{user}}-allow-to-sudo-pacman"
            state: absent

      - name: Download Operator Mono
        become: true
        become_user: "{{user}}"
        git:
            repo: https://github.com/coderJianXun/Operator-Mono.git
            dest: /tmp/operator-mono

      - name: Install Operator Mono
        become: true
        become_user: "{{user}}"
        shell: font-manager -i /tmp/operator-mono/src/Operator\ Mono

      - name: Enable Docker service
        shell: systemctl enable docker && systemctl start docker

      - name: Enable Dnsmasq service
        shell: systemctl enable dnsmasq && systemctl start dnsmasq

      - name: Add user to the docker group
        shell: "gpasswd -a {{user}} docker"

      - name: Install jwilder's Docker proxy
        shell: docker run -d -p 80:80 --name=proxy --restart=always -v /var/run/docker.sock:/tmp/docker.sock:ro jwilder/nginx-proxy && docker network create proxy && docker network connect proxy proxy
        when: not dotfiles.stat.exists

      - name: Use Dnsmasq as the first nameserver
        shell: echo "nameserver 127.0.0.1" > /etc/resolv.conf.head
        when: not dotfiles.stat.exists

      - name: Create Dnsmasq config directory
        file:
            path: /etc/dnsmasq.d
            state: directory
        when: not dotfiles.stat.exists

      - name: Configure *.docker domain name
        shell: echo "local=/docker/" > /etc/dnsmasq.d/docker-tld && echo "address=/docker/127.0.0.1" > /etc/dnsmasq.d/docker-tld
        when: not dotfiles.stat.exists

      - name: "Activate Dnsmasq configuration directory"
        lineinfile:
            dest: "/etc/dnsmasq.conf"
            state: "present"
            line: "conf-dir=/etc/dnsmasq.d"
        when: not dotfiles.stat.exists

      - name: Restart Dnsmasq service
        shell: systemctl restart dnsmasq
        when: not dotfiles.stat.exists

      - name: Update XFCE theme configuration and enable XFCE numlock
        copy:
            src: "./{{item}}"
            dest: "/home/{{user}}/.config/xfce4/xfconf/xfce-perchannel-xml/{{item}}"
        with_items:
            - xfwm4.xml
            - xsettings.xml
            - keyboards.xml
            - xfce4-desktop.xml
      
      - name: Download background
        shell: "curl https://i.redd.it/ctjsjzuy6icz.jpg -o /home/{{user}}/Images/background.jpg"

      - name: Update background for i3lock
        shell: "betterlockscreen -u /home/{{user}}/Images/background.jpg"

      - name: Set favorites for start menu
        replace:
            path: "/home/{{user}}/.config/xfce4/panel/whiskermenu-8.rc"
            regexp: "favorites="
            replace: "favorites=terminator.desktop,exo-web-browser.desktop"
     
      - name: Enable numlock globally
        lineinfile:
            path: "/home/{{user}}/.xinitrc"
            line: "numlockx &"
            insertafter: "by startx"
       
